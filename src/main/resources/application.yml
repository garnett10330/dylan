# Docker 運行 MySQL 的命令示例
#docker container run --name WeiMySQL -p 3306:3306 -e MYSQL_ROOT_PASSWORD=qwe123 -e MYSQL_DATABASE=weitest -e MYSQL_USER=weichen -e MYSQL_PASSWORD=qwe123 mysql

# 服務器配置
server:
  port: 8650  # 應用程序運行的端口
  tomcat:
    max-connections: 1000
    max-threads: 100
    accept-count: 300
    maxSpareThreads: 100
    minSpareThreads: 500
# Spring 相關配置
spring:
  application:
    name: dylantest  # 應用程序名稱
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss  # 日期格式化
    time-zone: GMT+8  # 時區設置

  # 數據源配置
  datasource:
    mysql:
      jdbc-url: jdbc:mysql://127.0.0.1:3306/weitest?allowMultiQueries=true&useSSL=false&characterEncoding=utf8&rewriteBatchedStatements=true&useServerPrepStmts=true&cachePrepStmts=true&prepStmtCacheSize=250&prepStmtCacheSqlLimit=2048&allowPublicKeyRetrieval=true
      username: weichen  # 數據庫用戶名
      password: qwe123  # 數據庫密碼
      driver-class-name: com.mysql.cj.jdbc.Driver  # MySQL 驅動類
      hikari:  # HikariCP 連接池配置
        connection-test-query: SELECT 1
        pool-name: HikariPool-MySQL
        maximum-pool-size: 20  # 最大連接數
        minimum-idle: 5  # 最小空閒連接數
        idle-timeout: 300000  # 空閒連接超時時間（毫秒）
        max-lifetime: 1800000  # 連接最大生命週期（毫秒）
        connection-timeout: 10000  # 連接超時時間（毫秒）
    postgres:
      jdbc-url: jdbc:postgresql://localhost:5432/postgres?prepareThreshold=3&reWriteBatchedInserts=true
      username: postgres  # 數據庫用戶名
      password: postgres  # 數據庫密碼
      driver-class-name: org.postgresql.Driver  # postgres 驅動類
      hikari: # HikariCP 連接池配置
        connection-test-query: SELECT 1
        pool-name: HikariPool-Postgres
        maximum-pool-size: 20  # 最大連接數
        minimum-idle: 5  # 最小空閒連接數
        idle-timeout: 300000  # 空閒連接超時時間（毫秒）
        max-lifetime: 1800000  # 連接最大生命週期（毫秒）
        connection-timeout: 10000  # 連接超時時間（毫秒）
  rabbitmq:
      host: localhost  # 添加 RabbitMQ 主機配置
      port: 5672      # 添加 RabbitMQ 端口配置
      username: user
      password: password
      connection-timeout: 60000
      requested-heartbeat: 60
      cache:
        channel:
          size: 100  # 根據實際需求調整
          checkout-timeout: 10000  # 毫秒，可根據需要調整
        connection:
          mode: channel  # 缓存通道
      listener:
        simple:
          acknowledge-mode: manual
          concurrency: 10 # 消费端的监听个数(即@RabbitListener开启几个线程去处理数据。)
          max-concurrency: 50 # 消费端的监听最大个数
          #prefetch: 1 # 每個消費者最多同時處理5條消息
        retry:
          enabled: true
          initial-interval: 1000
          max-attempts: 3
          max-interval: 10000
          multiplier: 2.0
  rabbitmq-config:
    normalQueue: normal-queue
    noDlqQueue: no-dlq-queue
    dlqQueue: normal-queue-dlq
    exchangeName: normal-exchange
    dlqExchangeName: dlx-exchange
  redis:
    enabled: true
    cluster:
        nodes:
          localhost:6380,localhost:6381,localhost:6382,localhost:6383,localhost:6384,localhost:6385
#          localhost:6379
#          localhost:6380
#          localhost:6381
#          localhost:6382
#          localhost:6383
#          localhost:6384

    timeout: 6000    # 連接超時（毫秒）
    lettuce:
      pool:
        max-active: 16   # 連接池最大連接數
        max-idle: 16     # 連接池最大空閒連接數
        min-idle: 4     # 連接池最小空閒連接數
        max-wait: 5000  # 最大等待時間（毫秒）
  security:
    user:
      name: weichen
      password: qwe123
      roles: ACTUATOR_ADMIN

management:
  endpoints:
    web:
      exposure:
        include: health,metrics,prometheus
      base-path: /actuator
    enabled-by-default: false
  endpoint:
    health:
      enabled: true
      show-details: never
      group:
        liveness:
          include: ping
        readiness:
          include: db
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    enable:
      jvm: true
      process: true
      system: true
      http: true
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: false
    tags:
      application: ${spring.application.name}
#  server:
#    port: 8081


aws:
  region: ap-northeast-1
  endpoint: http://localhost:4566


logging:
  level:
    com.momo.dylan: info
#    org.mybatis: DEBUG


